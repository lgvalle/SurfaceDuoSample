language: minimal
os: linux
dist: xenial
group: edge

git:
  depth: false

env:
  global:
  # for updates check developer.android.com/studio#downloads (current 26.1.1)
  - ANDROID_SDK_TOOLS=commandlinetools-linux-6200805_latest.zip

before_install:
  # set JAVA_HOME path
  - export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
  # download and unzip Android SDK command line tools
  - wget -nv https://dl.google.com/android/repository/$ANDROID_SDK_TOOLS
  - unzip -q $ANDROID_SDK_TOOLS -d $HOME/sdk
  # set SDK tools path variable and ANDROID_HOME
  - export PATH=$PATH:$HOME/sdk/tools/bin
  - export ANDROID_HOME=$HOME/sdk
  # create empty cfg file to prevent sdkmanager warning message
  - mkdir -p $HOME/.android && touch $HOME/.android/repositories.cfg

install:
  # accept licenses for all available packages that have not already been accepted
  #- yes | sdkmanager --licenses >/dev/null
  - "${ANDROID_HOME}/tools/bin/sdkmanager" "platforms;android-28"
  - "${ANDROID_HOME}/tools/bin/sdkmanager" "build-tools;28.0.3"
  
before_script:
  # set executable flag for gradle wrapper
  - chmod +x gradlew
  # create dir for gradle settings
  - mkdir -p $HOME/.gradle
  # disable gradle daemon for current user
  - echo "org.gradle.daemon=false" >> $HOME/.gradle/gradle.properties
  # set gradle log format to plain
  - echo "org.gradle.console=plain" >> $HOME/.gradle/gradle.properties  

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  bundler: true
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - .gradle
    - $HOME/.android/build-cache
    - $HOME/.m2/repository
    - $HOME/.sonar/cache

jobs:	
  fast_finish: true
  include:
    - script: ./gradlew test
      if: type = pull_request
    - script: ./gradlew lint
      if: type = pull_request
    - stage: run_ci_pull_request_assemble
      if: type = pull_request
      script: ./gradlew assembleDebug
    - stage: run_ci_fastlane
      if: (NOT type IN (pull_request))
      before_install:
        - rvm install 2.6.3
        - bundle install
        - fastlane install_plugins
      script: bundle exec fastlane testing  
      